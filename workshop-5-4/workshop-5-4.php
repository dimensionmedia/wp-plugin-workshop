<?php
/**
 * Plugin Name: Workshop Plugin - Section 5 - 4
 * Plugin URI:  https://plugin-url.com/
 * Description: This plugin demos WordPress security practices: Nonces
 * Author:      David Bisset
 * Author URI:  http://davidbisset.com
 * Version:     1.0
 * Text Domain: sample-plugin
 * Domain Path: languages
 *
 * Sample Plugin is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * any later version.
 *
 * Sample Plugin is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Sample Plugin. If not, see <http://www.gnu.org/licenses/>.
 *
  */

// Exit if accessed directly.
if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

// Set our defined base.
if ( ! defined( 'WORKSHOP_PLUGIN_CTA_BASE ' ) ) {
	define( 'WORKSHOP_PLUGIN_CTA_BASE', plugin_basename( __FILE__ ) );
}

// Set our defined directory.
if ( ! defined( 'WORKSHOP_PLUGIN_CTA_DIR' ) ) {
	define( 'WORKSHOP_PLUGIN_CTA_DIR', plugin_dir_path( __FILE__ ) );
}

// Set our defined version.
if ( ! defined( 'WORKSHOP_PLUGIN_CTA_VER' ) ) {
	define( 'WORKSHOP_PLUGIN_CTA_VER', '0.0.1' );
}

if ( ! class_exists( 'Workshop_Five_Four_Main' ) ) :

	/**
	 * Main plugin class.
	 *
	 */
	class Workshop_Five_Four_Main {

		/**
		 * Plugin file.
		 *
		 * @since 1.0.0
		 *
		 * @var string
		 */
		public $file = __FILE__;

		/**
		 * Primary class constructor.
		 *
		 * @since 1.0.0
		 */
		public function __construct() {

            /* https://codex.wordpress.org/Data_Validation#Output_Sanitization */

            /*

            What is a Nonce?
            WordPress describes nonces as “a one-time token generated by a website… This could prevent unwanted, repeated, expired, or malicious requests from being processed.”

            In other words, a nonce is a unique key that your website creates that allows you to verify actions. For the purposes of this article, we’re going to focus on using nonces to ensure that requests are originating from our own website.

            */

            if ( ! function_exists('wp_get_current_user') ) { 
                include( ABSPATH . "wp-includes/pluggable.php"); 
            }

            if ( current_user_can('edit_others_posts') ) {
                /**
                 * add the delete link to the end of the post content
                 */
                add_filter('the_content', array( $this, 'workshop_example_generate_delete_link') );
             
                /**
                 * register our request handler with the init hook
                 */
                add_action('init', array( $this, 'workshop_example_delete_post') );
            }


        }

        public function init() {
           
            // nothing here.

        }

        /**
         * generate a Delete link based on the homepage url
         */
        function workshop_example_generate_delete_link($content) {
            // run only for single post page
            if ( is_single() && in_the_loop() && is_main_query() ) {
                // add query arguments: action, post, nonce
                $url = add_query_arg(
                    [
                        'action' => 'workshop_example_frontend_delete',
                        'post'   => get_the_ID(),
                        'nonce'  => wp_create_nonce('workshop_example_frontend_delete'),
                    ],
                    home_url()
                );
                return $content . ' <a href="' . esc_url($url) . '">' . esc_html__('Delete Post', 'wporg') . '</a>';
            }
            return $content;
        }
 

        public function workshop_example_delete_post() {

                if (
                    isset($_GET['action']) &&
                    isset($_GET['nonce']) &&
                    $_GET['action'] === 'workshop_example_frontend_delete' &&
                    wp_verify_nonce($_GET['nonce'], 'workshop_example_frontend_delete')
                ) {
        
                // verify we have a post id
                $post_id = (isset($_GET['post'])) ? ($_GET['post']) : (null);
        
                // verify there is a post with such a number
                $post = get_post((int)$post_id);
                if (empty($post)) {
                    return;
                }
        
                // delete the post
                wp_trash_post($post_id);
                // or you could have used wp_delete_post( $postid, $force_delete );
                // https://codex.wordpress.org/Function_Reference/wp_delete_post
        
                // redirect to admin page
                $redirect = admin_url('edit.php');
                wp_safe_redirect($redirect);
        
                // we are done
                die;
            }
        }
 


             
    }

endif;

// Instantiate our class.
$Workshop_Five_Four_Main = new Workshop_Five_Four_Main();


